# SafeSurf VPN Environment Configuration
# =====================================

# Since the ".env" file is gitignored, you can use the ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "/src/env.js"
# should be updated accordingly.

# =============================================================================
# CORE REQUIRED VARIABLES
# =============================================================================

# Database Configuration (REQUIRED)
# For development, you can use SQLite. For production, use PostgreSQL.
# SQLite (Development): "file:./dev.db"
# PostgreSQL (Production): "postgresql://user:password@localhost:5432/safesurf"
DATABASE_URL="file:./dev.db"

# Authentication (REQUIRED for production, optional for development)
# Generate a new secret: npx auth secret
# https://next-auth.js.org/configuration/options#secret
AUTH_SECRET=""

# =============================================================================
# AUTHENTICATION PROVIDERS (Optional)
# =============================================================================

# Google OAuth (Optional - for Google sign-in)
# Get credentials from: https://console.developers.google.com/
AUTH_GOOGLE_ID=""
AUTH_GOOGLE_SECRET=""

# =============================================================================
# EMAIL SERVICE (Optional - needed for password reset emails)
# =============================================================================

# Resend Email Service (Recommended)
# Sign up at: https://resend.com
# Free tier: 3,000 emails/month
RESEND_API_KEY=""
RESEND_FROM_EMAIL="noreply@safesurf.tech"

# =============================================================================
# PAYMENT SERVICE (Optional - needed for paid subscriptions)
# =============================================================================

# YooKassa Payment Service (for Russian market)
# Sign up at: https://yookassa.ru
# Alternative: Stripe, PayPal, etc.
YOOKASSA_SHOP_ID=""
YOOKASSA_SECRET_KEY=""

# =============================================================================
# VPN SERVER INTEGRATION (Choose ONE approach)
# =============================================================================

# OPTION 1: Environment Variables (Simple setup)
# Use this for single-panel setups or development
THREEXUI_BASE_URL="https://your-server.com:2053"
THREEXUI_USERNAME="admin"
THREEXUI_PASSWORD="your-admin-password"
THREEXUI_SECRET_KEY=""

# OPTION 2: Database Configuration (Recommended for production)
# Leave the above variables empty and configure panels via the admin interface.
# This allows multiple panels, better security, and runtime configuration.
# Go to: /admin/panels to add your 3x-UI panels

# =============================================================================
# SERVER PROVISIONING (Optional - for automated server deployment)
# =============================================================================

# Digital Ocean API Token (for automatic VPS provisioning)
# Get token from: https://cloud.digitalocean.com/account/api/tokens
DIGITAL_OCEAN_API_TOKEN=""

# SSH Keys for server access (generate with: ssh-keygen -t ed25519)
VPS_SSH_PRIVATE_KEY=""
VPS_SSH_PUBLIC_KEY=""
VPS_SSH_FINGERPRINT=""

# =============================================================================
# ADVANCED FEATURES (Optional - for enhanced security and performance)
# =============================================================================

# Encryption key for sensitive data (generate: openssl rand -hex 32)
ENCRYPTION_KEY=""

# JWT secret for custom tokens (generate: openssl rand -base64 32)
JWT_SECRET=""

# =============================================================================
# EXTERNAL SERVICES (Optional - for scaling and performance)
# =============================================================================

# Redis (for caching and session storage)
# Local: "redis://localhost:6379"
# Upstash: Use UPSTASH_REDIS_REST_URL instead
REDIS_URL=""

# Upstash Redis (serverless Redis)
# Sign up at: https://upstash.com
UPSTASH_REDIS_REST_URL=""
UPSTASH_REDIS_REST_TOKEN=""

# =============================================================================
# MONITORING & ANALYTICS (Optional - for production monitoring)
# =============================================================================

# Sentry (for error tracking)
# Sign up at: https://sentry.io
SENTRY_DSN=""

# DataDog (for application monitoring)
# Sign up at: https://www.datadoghq.com
DATADOG_API_KEY=""

# =============================================================================
# QUICK START GUIDE
# =============================================================================

# MINIMAL SETUP (for development):
# 1. Copy this file to .env
# 2. Set DATABASE_URL to "file:./dev.db"
# 3. Run: npm run db:push
# 4. Run: npm run dev

# FULL SETUP (for production):
# 1. Set up a PostgreSQL database
# 2. Configure authentication (AUTH_SECRET, OAuth providers)
# 3. Set up email service (Resend)
# 4. Configure 3x-UI panel (either via env vars or admin interface)
# 5. Set up payment service (YooKassa)
# 6. Deploy and enjoy!

# Need help? Check the documentation:
# - 3x-UI Setup: /docs/3X-UI_SETUP.md
# - Full deployment guide: /docs/DEPLOYMENT.md
